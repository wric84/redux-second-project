{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return dispatch => {\n    const fetchData = async () => {\n      const repsonse = await fetch(\"https://test-project-5e0cb-default-rtdb.firebaseio.com/cart.json\");\n    };\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending Cart Data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://test-project-5e0cb-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent Cart Data Sucessfully\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending Cart Data Failed\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","repsonse","fetch","sendCartData","cart","showNotification","status","title","message","sendRequest","response","method","body","JSON","stringify","ok","Error","error"],"sources":["C:/Users/cwrig/OneDrive/Desktop/GitHub/React/redux-second-project/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return dispatch => {\r\n        const fetchData = async () => {\r\n            const repsonse = await fetch(\"https://test-project-5e0cb-default-rtdb.firebaseio.com/cart.json\")\r\n        }\r\n    }\r\n}\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending Cart Data\",\r\n        })\r\n      );\r\n      const sendRequest = async () => {\r\n        const response = await fetch(\r\n          \"https://test-project-5e0cb-default-rtdb.firebaseio.com/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Sending cart data failed\");\r\n        }\r\n      };\r\n      try {\r\n        await sendRequest();\r\n  \r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"success\",\r\n            title: \"Success!\",\r\n            message: \"Sent Cart Data Sucessfully\",\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"error\",\r\n            title: \"Error!\",\r\n            message: \"Sending Cart Data Failed\",\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAOC,QAAQ,IAAI;IACf,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,CAAC;IACpG,CAAC;EACL,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOL,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAC1B,kEAAkE,EAClE;QACES,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;MAC3B,CACF,CAAC;MACD,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMP,WAAW,CAAC,CAAC;MAEnBV,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdlB,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}